Recap from Week 3
(delivered on Week 4)

git merge conflict

It occurs when two branches change the same line.

<<<<<<< HEAD          the beginning of the conflict
=======               separates the changes
>>>>>>> branch-name   the end of the conflict

To resolve the git conflict:

- Delete all that is not needed
- Delete the markers
- git add .
- git commit




Path === location of a file or resource

The most common resources:

- images (<img>)
- scripts (*.js)
- stylesheets (*.css)

Root
The root refers to the main folder.

- Topmost directory of the Linux-based file system (/)
- Main folder of a project (project root)
- Web root or Document root (publicly available folder from the web)

File system root (/)

Itâ€™s the starting point of the entire file system.
It is not actual name, root doesn't have a name.

Example

/var/www/domain/index.html



Project root - main folder of the project.

Example:
/Users/andrei/projects/my_project/*

my_project = project root
leftmost slash (/) = file system root



Web Root - the folder accessible from the web.

This folder is configured in
the settings of a web server
(Apache or Nginx).

Any relative paths specified in project files
are resolved based on the web root.

Example

Web root
/var/www/my-super-domain.com/public_html/

File
/var/www/my-super-domain.com/public_html/js/app.js

In your code
<script src="js/app.js"></script>




Absolute path - specifies the exact
location of a file from the root.

Example

/users/projects/my-website.com/js/app.js





Relative path - specifies the location
of a file relative to the current directory.

Current directory - is the directory
where your file with path is located.

Example:

You have an image:
/var/www/domain/images/logo.png

You need to add this image into:
/var/www/domain/index.html

Current directory is domain/

<img src="images/logo.png" alt="Logo">


Paths are fragile!

If file structure changes, you need to update
your paths. Otherwise, paths will be broken.



. (single dot)

A reference to the current directory, explicitly.

./index.html
index.html

Both are exactly the same paths:
"look for file index.html in current directory"


.. (two dots)

A reference to the parent directory.
The directory one level up in the hierarchy.

Example

We are in /home/user/docs/

../index.html

Result:

/home/user/index.html
